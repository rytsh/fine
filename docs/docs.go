// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Eray Ates",
            "email": "eates23@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/file": {
            "get": {
                "description": "Get File",
                "tags": [
                    "file"
                ],
                "summary": "Get File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file path in server",
                        "name": "path",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_rytsh_fine_internal_server_msg.WebApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_rytsh_fine_internal_server_msg.WebApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_rytsh_fine_internal_server_msg.WebApiError"
                        }
                    }
                }
            },
            "put": {
                "description": "Put File",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Put File",
                "parameters": [
                    {
                        "type": "file",
                        "description": "this is a test file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file path in server",
                        "name": "path",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_rytsh_fine_internal_server_msg.WebApiSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_rytsh_fine_internal_server_msg.WebApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_rytsh_fine_internal_server_msg.WebApiError"
                        }
                    }
                }
            },
            "post": {
                "description": "Post File",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Post File",
                "parameters": [
                    {
                        "type": "file",
                        "description": "this is a test file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file path in server",
                        "name": "path",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_rytsh_fine_internal_server_msg.WebApiSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_rytsh_fine_internal_server_msg.WebApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_rytsh_fine_internal_server_msg.WebApiError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete file from server by path. Delete directory with force set to true.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Delete File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file path in server",
                        "name": "path",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "force delete",
                        "name": "force",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_rytsh_fine_internal_server_msg.WebApiSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_rytsh_fine_internal_server_msg.WebApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_rytsh_fine_internal_server_msg.WebApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_rytsh_fine_internal_server_msg.WebApiError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "problem explanation"
                }
            }
        },
        "github_com_rytsh_fine_internal_server_msg.WebApiSuccess": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string",
                    "example": "success"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "fine API",
	Description:      "file management service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
